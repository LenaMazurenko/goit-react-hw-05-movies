{"version":3,"sources":["utils/fetchQuery.js","components/searchBar/SearchBar.styled.js","components/searchBar/SearchBar.js","pages/MoviesPage.js"],"names":["BASE_URL","KEY","fetchQuery","param","a","fetch","then","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMovie","fetchMovieCast","id","fetchMovieReviews","fetchMovieByName","name","resp","Header","styled","header","Form","form","SubmitBtn","button","Input","input","Searchbar","useState","result","setResult","navigate","useNavigate","useSearchParams","queryStr","get","useEffect","results","onSubmit","e","preventDefault","target","query","value","trim","placeholder","type","fontSize","map","movie","to","title","MoviesPage"],"mappings":"gVAAMA,EAAW,+BACJC,EAAM,mC,SAEJC,E,8EAAf,WAA0BC,GAA1B,SAAAC,EAAA,+EACSC,MAAM,GAAD,OAAIL,EAAJ,YAAgBG,EAAhB,oBAAiCF,EAAjC,oBAAuDK,MACjE,SAAAC,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,kBALnC,4C,sBAUO,SAAeC,IAAtB,+B,4CAAO,sBAAAT,EAAA,+EACEF,EAAW,uBADb,4C,sBAKA,SAAeY,EAAtB,kC,4CAAO,WAA0BX,GAA1B,SAAAC,EAAA,+EACEF,EAAW,SAAD,OAAUC,KADtB,4C,sBAKA,SAAeY,EAAtB,kC,4CAAO,WAA8BC,GAA9B,SAAAZ,EAAA,+EACEF,EAAW,SAAD,OAAUc,EAAV,cADZ,4C,sBAKA,SAAeC,EAAtB,kC,4CAAO,WAAiCD,GAAjC,SAAAZ,EAAA,+EACEF,EAAW,SAAD,OAAUc,EAAV,cADZ,4C,sBAKA,SAAeE,EAAtB,kC,4CAAO,WAAgCC,GAAhC,SAAAf,EAAA,+EACEC,MAAM,GAAD,OACPL,EADO,iCAC0BC,EAD1B,iCACsDkB,EADtD,gCAEVb,MAAK,SAAAc,GAAI,OAAIA,EAAKX,WAHf,4C,qKC/BMY,EAASC,IAAOC,OAAV,qcAmBNC,EAAOF,IAAOG,KAAV,kLAUJC,EAAYJ,IAAOK,OAAV,uNAWTC,EAAQN,IAAOO,MAAV,4L,uBCpCH,SAASC,IACtB,MAA4BC,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAWC,cACjB,EAAuBC,cACjBC,EADN,oBAC8BC,IAAI,SAElCC,qBAAU,WACJF,GACFnB,YAAiBmB,GAAU/B,MAAK,SAAAc,GAAI,OAAIa,EAAU,YAAIb,EAAKoB,eAE5D,CAACH,IAQJ,OACE,qCACE,cAAChB,EAAD,UACE,eAACG,EAAD,CAAMiB,SARc,SAAAC,GACxBA,EAAEC,iBACFT,EAAS,UAAD,OAAWQ,EAAEE,OAAOC,MAAMC,MAAMC,UAMpC,UACE,cAACnB,EAAD,CAAOT,KAAK,QAAQ6B,YAAY,iBAChC,cAACtB,EAAD,CAAWuB,KAAK,SAAhB,SACE,cAAC,IAAD,CAAeC,SAAS,eAK7BlB,GACC,6BACGA,EAAOmB,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAMpC,IAA3B,SAAkCoC,EAAME,SADjCF,EAAMpC,YCpCZ,SAASuC,IACtB,OACE,mCACE,cAACzB,EAAD","file":"static/js/movie-page.82662d21.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\r\nexport const KEY = '926288ccedb892ed59969fcc82f10d15';\r\n\r\nasync function fetchQuery(param) {\r\n  return fetch(`${BASE_URL}/${param}?api_key=${KEY}&language=en-US`).then(\r\n    response => {\r\n      return response.ok\r\n        ? response.json()\r\n        : Promise.reject(new Error('Not found'));\r\n    },\r\n  );\r\n}\r\n\r\nexport async function fetchTrendingMovies() {\r\n  return fetchQuery('trending/movie/day');\r\n  //https://api.themoviedb.org/3/   trending/all/day    ?api_key=<<api_key>>\r\n}\r\n\r\nexport async function fetchMovie(param) {\r\n  return fetchQuery(`movie/${param}`);\r\n  //https://api.themoviedb.org/3/   movie/{movie_id}    ?api_key=<<api_key>>&language=en-US//infoAboutOneMovie\r\n}\r\n\r\nexport async function fetchMovieCast(id) {\r\n  return fetchQuery(`movie/${id}/credits`);\r\n  //https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US\r\n}\r\n\r\nexport async function fetchMovieReviews(id) {\r\n  return fetchQuery(`movie/${id}/reviews`);\r\n  //https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US\r\n}\r\n\r\nexport async function fetchMovieByName(name) {\r\n  return fetch(\r\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${name}&page=1&include_adult=false`,\r\n  ).then(resp => resp.json());\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SubmitBtn = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport { Header, Form, SubmitBtn, Input } from './SearchBar.styled';\r\nimport { MdImageSearch } from 'react-icons/md';\r\nimport { fetchMovieByName } from '../../utils/fetchQuery';\r\n\r\nexport default function Searchbar() {\r\n  const [result, setResult] = useState(null);\r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n  const queryStr = searchParams.get('query'); // \"batman\"\r\n\r\n  useEffect(() => {\r\n    if (queryStr) {\r\n      fetchMovieByName(queryStr).then(resp => setResult([...resp.results]));\r\n    }\r\n  }, [queryStr]);\r\n\r\n  //=================================\r\n  const handlerFormSubmit = e => {\r\n    e.preventDefault();\r\n    navigate(`?query=${e.target.query.value.trim()}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <Form onSubmit={handlerFormSubmit}>\r\n          <Input name=\"query\" placeholder=\"Search movie\" />\r\n          <SubmitBtn type=\"submit\">\r\n            <MdImageSearch fontSize=\"2em\" />\r\n          </SubmitBtn>\r\n        </Form>\r\n      </Header>\r\n\r\n      {result && (\r\n        <ul>\r\n          {result.map(movie => (\r\n            <li key={movie.id}>\r\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import Searchbar from '../components/searchBar/SearchBar';\r\n\r\nexport default function MoviesPage() {\r\n  return (\r\n    <>\r\n      <Searchbar />\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}