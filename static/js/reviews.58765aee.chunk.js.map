{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/reviews/Reviews.styled.js","components/reviews/Reviews.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","List","styled","ul","Item","li","Reviews","movieId","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","obj","results","length","map","review","author","content","id"],"mappings":"kMAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,mIIHjFC,EAAOC,IAAOC,GAAV,sEAKJC,EAAOF,IAAOG,GAAV,uE,OCHF,SAASC,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,EAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,qBAAU,WACRC,YAAkBL,GAASM,MAAK,SAAAC,GAAG,OAAIJ,EAAW,YAAII,EAAIC,eACzD,CAACR,IAGF,mCACsB,IAAnBE,EAAQO,OACP,yEAEA,cAACf,EAAD,UACGQ,EAAQQ,KAAI,SAAAC,GACX,OACE,eAACd,EAAD,WACE,0CAAac,EAAOC,UACpB,4BAAID,EAAOE,YAFFF,EAAOG","file":"static/js/reviews.58765aee.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n  margin-top: 10px;\r\n  list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  font-size: 12px;\r\n  font-style: italic;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { fetchMovieReviews } from '../../utils/fetchQuery';\r\nimport { List, Item } from './Reviews.styled';\r\n\r\nexport default function Reviews({ movieId }) {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchMovieReviews(movieId).then(obj => setReviews([...obj.results]));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {reviews.length === 0 ? (\r\n        <p>We don't have any reviews for this movie</p>\r\n      ) : (\r\n        <List>\r\n          {reviews.map(review => {\r\n            return (\r\n              <Item key={review.id}>\r\n                <h3>Author: {review.author}</h3>\r\n                <p>{review.content}</p>\r\n              </Item>\r\n            );\r\n          })}\r\n        </List>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}