{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/cast/Cast.styled.js","components/cast/Cast.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Grid","styled","ul","Item","li","Image","img","Cast","movieId","useState","cast","setCast","useEffect","fetchMovieCast","then","obj","map","el","src","profile_path","alt","original_name","character","id"],"mappings":"kMAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,qIIHjFC,EAAOC,IAAOC,GAAV,+RAaJC,EAAOF,IAAOG,GAAV,sLAMJC,EAAQJ,IAAOK,IAAV,uG,OCjBH,SAASC,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAC7B,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,qBAAU,WACRC,YAAeL,GAASM,MAAK,SAAAC,GAAG,OAAIJ,EAAQ,YAAII,EAAIL,YACnD,CAACF,IAGF,mCACGE,GACC,cAACV,EAAD,UACGU,EAAKM,KAAI,SAAAC,GACR,OACE,eAACd,EAAD,WACE,cAACE,EAAD,CACEa,IAAG,8CAAyCD,EAAGE,cAC/CC,IAAKH,EAAGI,gBAEV,6BAAKJ,EAAGI,gBACR,4CAAeJ,EAAGK,eANTL,EAAGM","file":"static/js/cast.9117be75.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from '@emotion/styled';\r\n\r\nexport const Grid = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 10px;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 150px;\r\n  object-fit: cover;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\nimport { fetchMovieCast } from '../../utils/fetchQuery';\r\nimport { Grid, Item, Image } from './Cast.styled';\r\n\r\nexport default function Cast({ movieId }) {\r\n  const [cast, setCast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMovieCast(movieId).then(obj => setCast([...obj.cast]));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {cast && (\r\n        <Grid>\r\n          {cast.map(el => {\r\n            return (\r\n              <Item key={el.id}>\r\n                <Image\r\n                  src={`https://www.themoviedb.org/t/p/w780/${el.profile_path}`}\r\n                  alt={el.original_name}\r\n                />\r\n                <h3>{el.original_name}</h3>\r\n                <p>Character: {el.character}</p>\r\n              </Item>\r\n            );\r\n          })}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}